<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Pbox_Tilbage_TrigonomiskeFunktioner.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAoAAAAKACAYAAAAMzckjAAAABGdBTUEAALGPC/xhBQAAHe9JREFUeF7t
        3QusbnlZ3/GpMjKIggxip9qq0DZaQRnlMtHalMZMwNYa8AJDSosXRhxaSWtMatPYtA0W0+qgiFyGyoBy
        0dLKzSimUiKOJgZNzdQGHEUREAglFgURpgzt76Hnma5u3rPPf9/OXuv/fj7JN/vMmTOXs9ebs5/9rMt7
        BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6/HnLvQp6VPTPQ6p/n79uqr+
        GQAAVq4HvR7o6scncfDfZSgEAFiBHtJqe7fLlema9KXpUekb0z9IN6bvSk9NT07flL4mXZs+N90z7dJb
        xJMOlwAAHEFt4vp07VINbQ9NNdD9SPrF9Lb0wfS/j9CfprenN6Xnpe9ID0/3Tks9fNoMAgCckRq4Dm76
        /mL6++mlqYa9XQNdd1f6WPpfO6qfr7+/65/r3pFemWp7+KC0tGsgBQDgmA4OfvdLT0qvS3+SDg5qPeT1
        UPfxdPDXHFb9+oPD4sF/x4dTbRhrO1inmNuuIRUAgEEHh6kHp2eld6flMNaD2qU2eCeth8Jq+fPvT7ek
        R6RW/+82ggAAg/oav1bX370i3Zl66OpB7KjbvdOq/ru7hsHXpr+VWv0+XCMIAHCI5eD3xamu7Vtu9nad
        jj3vehhc/txr0nIj6LQwAMABy63fZ6RnpLobtweq89z2HaX6/+yBtX78nPSAVGwDAQAuWF4r97XpLWk5
        UPWPt9Ty//ud6Qmp2QYCAHutnqNXrkr17L4emtZ4qvc41e+jf/yT6epU+vcNALBXegj6kvTmVENSnT49
        67t5L3d993D9+I70VakYAgGAvdLDz+PSB1INR8tt2Yz17++j6SmpuC4QAJje8maP7049HG31Wr+jVtvA
        PrX9zFTqGkhDIAAwpeXw92/TwYFoX6rfb28Db031eekAAKaxHP6em2r4meVGj+PWD7au9xfudw4xBAIA
        U1gOf89LNfTMfr3faMshsD9PhkAAYNN2DX/Lt3TT//t8vDiVukHGEAgAbJLN33g9BP5AKh4RAwBsjs3f
        0evPz7enYggEADbD5u941Q0x9TicGgSvS6U/jwAAq2Xzd7L6XVB+L903uTMYAFg1m7/TqT9nL0/FqWAA
        YJVs/k63HgIfn4pTwQDAqtj8nX51Krh6b7p/cioYAFgNm7+zq4fo56diCwgAnDubv7Ot7wqurk3FEAgA
        nBubv8tTDX/18fWp1KlgAIDLzubv8taPhvkbqdgCAgCXlc3f5a+3gL+Qii0gAHDZ2PydX7UFrGsCH5aK
        LSAAcOZs/s63HrRvTcUACACcKZu/86+2f/Xxj9PnpFLHBQDg1Nn8raceum9KxVvEAQCnzuZvXdXNILUJ
        fFMqbgYBAE6Vzd/66tPAdRwelIohEAA4FTZ/681pYADg1Nn8rbt+JuCrU+ljBQBwLDZ/669PA7833TuV
        Om4AAEdm87edegi8LhVbQADgyGz+tlUfm6el4jpAAOBIlsPfc1MNFjZ/664HwH+figEQABhm87fN+kaQ
        X03FNYAAwBDX/G23vgbwXeleqRgCAYBD2fxtux4AP5I+PxUPhAYALsrmb456CHx4KgZAAGAnm7956usA
        H5NKH1cAgLvZ/M1VD4BPTMWdwADA/8fmb776+N2YigEQALibzd+c9QD49FQMgADAJ9j8zVsfx+9JxQAI
        ANj8TV4PgN+VigEQAPac4W/+XAMIANzN8LcfuQsYAPgEw9/+5DmAAIDhb8/qdwJ5WCreCQQA9ozhb7/y
        XsAAsOcMf/tXD4DvTFelUq8DAGAP7Br+POdv/vr6v9tSsf0DgD1h87e/9ZD/wlTcAQwAe8Dwt9/1AHhT
        KgZAAJic077qawAfkUq/HgCACdn86a4LH9+dPj2Vel0AABOy+VPVN4D8TCq2fwAwKZs/dT30PzUV1/8B
        wIRs/tQtHwD9hal4BAwATMbmT8vq9G8NgW9MxfAHAJOx+dPB+vh/RypO/wLARGz+dLA+/fuB9Nmp1OsE
        AJiAzZ921a+BfvePfo0AABtn86eLVc//q65NxQAIABOw+dPF6mf//Vwqbv4AgAnY/Omw+t0//noqtn8A
        sHE2fzqs3v69LhXDHwBsnM2fDqvu/K0BsL4heEiq14vTvwCwYTZ/ulT9enh2KrZ/ALBhNn+6VHXdX20A
        /zB9VqrNX71uAIANsvnTSP2aeGwqtn8AsFE2fxqph78Xp2L4A4CNsvnTSP3IlzvSZyanfgFgo2z+NFLf
        9fuR9OWp2P4BwAbZ/Gm0fl08KZV7XPgIAGyIzZ9G69fFv0zF8AcAG2Tzp9F6+Ht+KoY/ANggmz+N1q+L
        n0ilXjf1+gEANsTmT6P18PdTqV437vgFgA2y+dNo/U2B4Q8ANmzX8Gfzp13t2vxVAMCG2PxptP6m4KeT
        zR8AbJTNn0az+QOACdj8aTSbPwCYgM2fRutvCpbDn80fAGyMzZ9Gs/kDgAnY/Gk01/wBwARs/jRaf1Pg
        OX8AsGE2fxrN5g8AJmDzp9Fs/gBgAoY/jWbzBwATMPxpNJs/AJiA4U+j2fwBwAQMfxpt1+bP8AcAG2P4
        02g2fwAwAcOfRrP5A4AJGP40Wr8uvLcvAGyY4U+judsXACawa/jrL/LSsl3X/Bn+AGBjdg1/Nn/alc0f
        AEzA8KfRbP4AYAK7hj+nfbWrfl244QMANszmT6PZ/AHABGz+NNqu4c/mDwA2xuZPo9n8AcAEbP40ms0f
        AEzA5k+j9etiecOHzR8AbIzNn0az+QOACdj8aTSbPwCYgM2fRrP5A4AJ2PxptF3Dn80fAGyMzZ9Gs/kD
        gAnY/Gm0/qbANX8AsGE2fxqtvynw3r4AsGE2fxpt1/Bn8wcAG2Pzp9Fc8wcAE7D502g2fwAwAZs/jWbz
        BwATsPnTaDZ/ADABmz+NZvMHABOw+dNo/U2Bd/gAgA2z+dNoNn8AMAGbP41m8wcAE7D502g2fwAwAZs/
        jdbfFLjbFwA2zOZPo9n8AcAEbP40ms0fAEzA5k+j2fwBwARs/jSazR8ATMDmT6PZ/AHABGz+NFp/U+A5
        fwCwYTZ/Gs3mDwAm0F/Ei82fDsvmDwAmsBz+bknLL/LSMps/AJjAcvi7NS2/yEvL+psCd/sCwIYZ/jSa
        zR8ATMDwp9Fc8wcAE9g1/LnmT7vqbwqWp31t/gBgY2z+NNquzZ/hDwA2xuZPo7nmDwAmYPOn0Xbd7Wv4
        A4CNsfnTaDZ/ADABmz+NtmvzVx8BgA2x+dNoy81fb/0MfwCwMTZ/Gm3XaV/DHwBsjM2fRjP8AcAElsPf
        i9Lyi7y0rL8pcMMHAGyYzZ9GW97w0YNfv3bqdSRJ+xJsWr2IDw5/Nn/a1V0XPr4iAfB/v35+arrHovo5
        AyKrtmv4s/nTrnr4+4/pnouulKQ9rIa+S6mvrzUQ1q81ELIaNn86Tr+X3p7+4MJHSdrHfifdnm5Lr03P
        T/8sfXN6aLpPOqgHQsMg58bmT5Kks+s96Y3pmekx6f5pqbaCI1tEODU2fzpJH091OliSdMUVH7tQLVGq
        +vGuPzvfl16VviVdk5acIubM2fxJknT21TfLPRjWoLj8e3+UXpquT0sGQc6EzZ8kSedTD4QHN4RvTt+a
        7pWaU8OcGps/SZLWUQ+Dy83gW9KNqW4SKTUE9tdtOBabP0mS1llfR9h//Rvp61KzDeRYDH+SJK2/g4Ng
        vdvSF6ZSX8ddG8gww58kSduqBsE+Nfz+9JTUbAO5JMOfJEnbbXmdfr395tWp9DWC8EkMf5Ikbb+6WaQH
        wd9Oj0jFEMgnMfxJkjRXPQR+ON2QiiGQuxn+JEmas+UNIt+TigdH84kXQF8caviTJGm++vmB9ePvT6U2
        gYbAPbUc/l6U6oVh+JMkab6W1wX+YCqGwD1UB7yvA3hOqheE4U+SpHlbDoHPSMU1gXumD/i/SvVCMPxJ
        kjR/yyHwH6diCNwTfaC/JdULoF4I9YJYvkAkSdKcLYfAx6ViCJxcX/N3XaqtX10UaviTJGm/6ncO+VB6
        SCr9RBAmUwe2ul/6/dQvgIMvCkmSNH99Z/Bb0mekmhHcFDKh3v69MtUB7/WvJEnaz3oWeEkqTgVPpoe/
        J6flAZckSftdzwSPT6VnBjauT/1ek/4o1Wlf1/1JkqSqrwd8X3pA6rmBjetJ/kdTHWjbP0mStKxng3pj
        iGILuHF9Qefnpz9Ntn+SJGlXfVPIV6ViCNywPngvSHVQbf8kSdKuegD8lVTLI6eBN6qHv3q+Tz3zz/ZP
        kiQdVg+Bj03FFnCD+qD9fFoeVEmSpF3VrFDLov+a3AyyQT38XZ/6gB48yJIkSQfrmeHvpOLZgBvSN3/c
        lpYHU5Ik6bB6C/iGVGwBN6K3f/V+v3Ug69q/gwdXkiTpYtUAWPPDl6XiWsAN6FXtD6c6iO78lSRJR6ln
        h2el4jTwBtSp3zpQb0118GwAJUnSUerZ4Z3pXqnUfMFK9Xn6Wtl67IskSTpuPQQ+JhWngVesNn81oX93
        qoPm9K8kSTpONUPUIun5qTgNvGK9AfzPqQ6eu38lSdJx6g3g76YrU3EaeIV6+Pu8VO/7WwfNKWBJknTc
        ao6ork3FI2FWqFez35bqoNn+SZKkk9SXkv3DVJwGXqG+OPNn0vKgSZIkHaeeJV6WihtBVqbPyX9a+v1U
        B8vjXyRJ0knqWeK3ktO/K9QH5UHpzlQHy/V/kiTpJPUs8aF0TSoGwRXplez1qQ6U7Z8kSTqNegj8ylSc
        Bl6RvijzqakOkuv/JEnSadQzxRNTcSPIivTB+P60PFiSJEknqWeK703FALgifTBuTcuDJUmSdJJ6pnh2
        KgbAFenz8a9NdZA8A1CSJJ1GPQC+PBXXAK5I35HzxlQHyQAoSZJOo54pfjYVA+CK9HMAfy3VQXIXsCRJ
        Oo16AHxDKh4DsyI9AP56qoNkAJQkSadRD4C/nIoBcEUMgJIk6SwyAK6YU8CSJOkscgp4xdwEIkmSzqKe
        KdwEskIeAyNJks6ifgzMy1IxAK5IP5TxRWl5sCRJkk5SzxQ/kooHQa9IH4xnpOXBkiRJOkk9U/zTVAyA
        K9IH48a0PFiSJEknqWeKG1IxAK5In4//mlQHyV3AkiTpNPr4hY/XpeIawBXpu4AfmO5MywMmSZJ0nHqW
        +GD686l4DMyK9HMAr0xvS3WwbAElSdJJ6lni9lSzRs8brEivZP9DqoPlOkBJknSSepb4yVSc/l2hvijz
        yakOlmcBSpKkk9QD4E2puAFkhXote02qc/V1wFwHKEmSjlvNEdWXpeL6v5XqA/P6VAfOFlCSJB2nvv7v
        jlT3GBTXAK5UrWbr4Dw91UFzHaAkSTpONUPU9u/HUnH6d8V6A/iQVJO7U8CSJOk49Qbw+lTcALJytQGs
        g/Tf0/IASpIkjdSzw9vTVak4/btyvaL9oVQHz2lgSZJ0lHp2+HepOP27Ab2ifViqg+c0sCRJOko1O9SN
        pA9Oxd2/G9EH6r+kOpDuBpYkSSP1zPALqRj+NqS3gH8zLQ+mJEnSYfX1f49Oxc0fG9MH7LWpDqQhUJIk
        HVbNCnX6982pNn+2fxtUB63u2Pni9JHksTCSJOmweln0danY/m1UH7hnpzqg7giWJEm76uHvl1Kx/duw
        3gJ+bqr3B7YFlCRJu+rTv49MxfZv4/oAei6gJEnaVc8Gt6Ri+JtAbQBrE3j/9L5UW8C+w0eSJO13fXbw
        3enq1GcPmUBP8jekOti2gJIkqeqZ4LGp2P5Npt/G5aVpecAlSdJ+dvDUr7d8m1CfCr5PuiPVAfdsQEmS
        9rOeAW5P90q1+XPqd1K91v3y9GfJXcGSJO1f/fX/j1M9L7h47Mvker27vB7QEChJ0n5UX/M98HlP9RD4
        valeAK4HlCRp/mr466/5N6Xiur890wf8B1O9EO688FGSJM3Xcvj7vlQMf3uoLvTsA//cVC8Im0BJkuZr
        Ofz9m1QMf3ushsA+7/+8VC8Mm0BJkuaphr9+A4h/kYrhj51DoE2gJEnbb/m4t3+Uise9cLflENing20C
        JUnabr3M+ZP0uFRs/vgkNoGSJG2/5WNe/lt6aCqGPy7KNYGSJG235eLm1lTv/lUMf1ySTaAkSduqbvLo
        Gz3ek/5eav01HS7JJlCSpPVXQ9/yRo+XpM9Lpb6O19dzOBKbQEmS1lkNfcvB71fT9anZ+nEiNoGSJK2j
        fphzfeyf+830pNSbPls/To1NoCRJ51Pf0bvc9lVvSjekK1Oz9ePU2QRKknS29Tt21LBXi5a+qaN7b3ph
        +uq0ZPDjTNkE6iT1H2yStO/1Rq++hnYHN3zdu9LL0xPS1an112Sne7ksbAIlSTqbagj8g/Tzqd6z91Hp
        M9NSfQ228eNc2ATqKPXFyr+d3pLuSG+VpD3t9vRr6RfTK9Kz0tPT305flK5KB/XQZ9vHubMJ1Gh1uqM+
        vjp9Wlr+QfYpkrRnjahfV+/cYehjlWwCNVoPga9K/Zrxhxqwr/ob4PrzsAa9Hvbq5/zZyCbsGgJtArWr
        /ubgNakeW7D8brheR5K0D8E06gVtE6iR+puDOh1c3/HWa6eHQABgY3YNgTaB2lV/c2AIBIAJGAI1mk0g
        AExk1xDodLB2ZRMIABOxCdRoNoEAMBFDoEYzBALARAyBGs0QCAATMQRqNEMgAEzEEKjRDIEAMBFDoEYz
        BALARAyBGs0QCAAT2TUEek6gdmUIBICJ2ARqNEMgAEzEJlCjGQIBYCI2gRrNEAgAE7EJ1GiGQACYiE2g
        RutvDgyBADABm0CNZhMIABOxCdRoNoEAMBGbQI1mEwgAE7EJ1Gg2gQAwEZtAjWYTCAATsQnUaDaBADAR
        m0CNZhMIABOxCdRoNoEAMBGbQI1mEwgAE7EJ1Gg2gQAwEZtAjWYTCAATsQnUaDaBADARm0CNZhMIABOx
        CdRoNoEAMBGbQI1mEwgAE7EJ1Gg2gQAwEZtAjWYTCAATsQnUaDaBADARm0CNZhMIABOxCdRoNoEAMBGb
        QI1mEwgAE1kOgc9J9UXeEKhd2QQCwESWQ+Cz0vKLvbTMJhAAJmII1Gg2gQAwEUOgRrMJBICJGAI1mk0g
        AEzEEKjRbAIBYCKGQI1mEwgAEzEEajSbQACYyHIIvDnVF3lDoHZlEwgAE7EJ1Gg2gQAwEUOgRrMJBICJ
        GAI1mk0gAEzEEKjRbAIBYCKGQI1mEwgAEzEEajRDIABMxBCo0QyBADCRXUNgf7GXlhkCAWAiNoEazRAI
        ABOxCdRohkAAmIhNoEYzBALARGwCNVp/c2AIBIAJ2ARqNJtAAJiIIVCjGQIBYCKGQI3mdDAATMQQqNFs
        AgFgIoZAjWYTCAATMQRqNJtAAJiIIVCj2QQCwEQMgRrNJhAAJmII1Gg2gQAwEUOgRju4CawBsF4/AMAG
        GQI1Wr8uXpn6dWMIBICNMgRqtN4EvjiVPiUMAGyQIVCj9RD4zFRqCAQANsoQqNF6CPz2VAyBALBhyyHw
        5lRf5A2BOtjH08dSDYLXpdKvGwBgg2wCNdJdFz6+Ld03uTMYADbOEKiR+jXxslScCgaAjTMEaqR+TTw+
        FaeCAWDjDIG6VHUquK4JfE+6OjkVDAATMATqUvXr4Xmp2AICwAQMgTqsviu4ujYtXy8AwIYZAnVYNfzV
        x59LpU4FAwATMATqsHoI/OpUbAEBYBKGQF2sHgBfn4otIABMxBCoi9V3BX9FKraAADARQ6B21a+BF6Vi
        AASAyRgCdbDa/tXHD6TPSaVeJwDARAyBOlgf/6em4i3iAGBChkAtq5tBahP4S6m4GQQAJmUIVNengT+a
        HpiKIRAAJrUcAm9ONQQYAvezPu7fmYrTwAAwMZtAVf1MwFel0q8JAGBShkDV8wDr43vSvVOp1wUAMDFD
        oPpawEemYgsIAHvAELjf9bG+KRXXAQLAnjAE7m99nF+YigEQAPaIIXA/6xtBbkvFo2AAYM8YAvevvhHk
        HemqVOp1AADsEUPgftU3gfxZ+kup2AICwB4yBO5XPQQ+LBUDIADsqV1D4J0XPmqu+jrAR6fSxx0A2EM2
        gftRD4A3pOJOYADYczaB89dD/Y2pGAABAJvAyetj+bRUDIAAwCfYBM5bD4D/JBUDIABwN5vAObMBBAAO
        ZRM4Xz0APiUVAyAA8EmWQ+DNaTlEaHv1XcBPSMUACADs5HTwPHkOIAAwzBA4R/1OIF+RincCAQAOZQjc
        dt4LGAA4FkPgdrvrwsd3pHumUscTAOCSDIHbrK//++VUDH8AwJEYArdXH58XpOIOYADgyAyB26qPzXem
        YgAEAI7FELid+iaQh6fiBhAA4NgMgeuvbwD5w/TpqbgGEAA4EUPguutj8Z9S6WMFAHAihsD11sfhxlRc
        /wcAnBpD4PpaPgD6C1Jx/R8AcKoMgeuqnv9XQ+AbUjH8AQBnwhC4npz+BQAuG0Pg+denf/9nun8qdVwA
        AM6MIfB868/1Lan0sQAAOFOGwPOrnv9XPTQVAyAAcNkYAi9/dfNHffzZVAx/AMBlZwi8vPW7f3xlKgZA
        AOBcGAIvT739e00qhj8A4FwZAs+2uvO3BsA704NTfb49+w8AOHeGwLOrP48/nIrtHwCwGobA06+u+6sN
        4DvTfVNt/urzDACwGobA060/d1+fiu0fALBKhsDTqT9nP56Kt3wDAFZtOQTenJYDjS5dP/LlreneqT6X
        Tv0CAKtnE3i86pq/GgA/nLzjBwCwOYbAo1XDX39+npiKU78AwOYYAserZ/3Vx+9LxfAHAGyWIfDS9fD3
        Y6nU8Oe6PwBg0y42BNZpz+UgtI/18PeSVOrzZPgDAKawHAKXdwfv6xC4vObvxal42DMAMJ3lEPivUw0/
        dddrP/pkX6rhr97jt378o6kY/gCAaS2HwKel3gD2QDR7y9/nP0/FaV8AYC/0Xa5fm/5HqoFo9ptD+vf3
        wXRDKoY/AGCv9BD4V9JtqYajGU8J1++nN3+/ma5NxaNeAIC91KeDr0zPTD00zXCDyPJGj+q5qd7erRj+
        AIC9VjdAtEel2pL10LTVQXB5rd8d6e+mtvz9AgDsrboOrrdiV6W6QeIDaTlQrX0QrP+/5eBX7+n7A+k+
        qbjeDwBghz4lXB6YbkkfTT1U1UZwbdcIHjzVW3/9svQlqS1/XwAAHLDcBpYvTT+ePpR6yKpN23luBXvb
        t9z41aD68nRdarZ+AABHUNfKLTdndbfwM9Lb0nIYqyGsN4NnNRDWv7f+/fXfWQ591bvSD6UHp1b/3671
        AwA4poODYN1J+w3pp9P703IYq3ogrI89FI4Ohv1r+9Etuwa+qq5PfHV6YrpvagY/AIBTVIPVwcenPCDV
        MPiC9FvpznRwWOsODnbdclDc9c9V9fffmm5N9RDnv5CWDH4AAGeorqmrgWu5FSz18381fXOqU8W1obs9
        1TuNHDYYLquBsLaKNUy+LtVdvDXw/bV08L/Xm0nX+AEAXEY9DB72YOXPSn85PTJdn2pjWKduu29Mj051
        80ZdZ3i/dDE9eBr6AABWoIayPk1cHdzYHVUPllX9ew19AAAb0YNhb+96qFvWf8+gBwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA63LFFf8HxVzrk6AvQ0cAAAAASUVORK5CYII=
</value>
  </data>
</root>